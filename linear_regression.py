# -*- coding: utf-8 -*-
"""Linear_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O-k6f22aJasGXh7kgAVrFzPnovUwiGVB

## Linear Regression Implimention
1. Through scikit learn(Easy to use)
2. Some stats models
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

x=np.array([2,5,13,35,37,56]).reshape((-1,1))
y=np.array([3,6,15,12,21,18])
print(x)

plt.scatter(x,y)
plt.xlabel("IV")
plt.ylabel("DV")
plt.show()

from sklearn.linear_model import LinearRegression

SLR=LinearRegression()

SLR.fit(x,y)#training

pred=SLR.intercept_+(SLR.coef_*x)#calculating the value  of y predict based on multiplying weights (hypothesis)
print(pred)

pred=SLR.predict(x)#Inbuilt fuction for calculating hypothesis or y predicted value
print(pred)

from sklearn.metrics import mean_squared_error

mse=mean_squared_error(y,pred)
plt.plot(x,pred,color='Red',marker='o',linestyle='dotted')

print("MSE:",mse)
print("intercept",SLR.intercept_)
print("slope",SLR.coef_)

#checking with new data of x
x_new=np.arange(5).reshape((-1,1))
print(x_new)
y_new=SLR.predict(x_new)
print(y_new)

#Task 1-->Read an excel file to fetch x and y values and repeat linear regression.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

x1=pd.read_excel('/content/drive/MyDrive/data1.xlsx',usecols='A')
y1=pd.read_excel('/content/drive/MyDrive/data1.xlsx',usecols='B')

plt.scatter(x1,y1)
plt.xlabel("IV")
plt.ylabel("DV")
plt.show()

from sklearn.linear_model import LinearRegression

SLR2=LinearRegression()

SLR2.fit(x1,y1)

pred1=SLR2.predict(x1)#hypothesis

from sklearn.metrics import mean_squared_error

mse2=mean_squared_error(y1,pred1)
plt.plot(x1,pred1,color='Red',marker='*')

print("MSE:",mse2)
print("Intercept",SLR2.intercept_)
print("slope",SLR2.coef_)

#Task 2 ---> Instead of directly giving values, randomly generate x and y using random module and do linear regression.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

k=[]
l=[]
for i in range(10):
  a=np.random.randint(10,250)
  k.append(a)
for i in range(10):
  a=np.random.randint(10,400)
  l.append(a)
x2=np.array(k).reshape((-1,1))
y2=np.array(l)

plt.scatter(x2,y2)
plt.xlabel("IV")
plt.ylabel("DV")
plt.show()

from sklearn.linear_model import LinearRegression

SLR3=LinearRegression()

SLR3.fit(x2,y2)

pred3=SLR3.predict(x2)

from sklearn.metrics import mean_squared_error

mse3=mean_squared_error(y2,pred3)
plt.plot(x2,pred3,color='Black',marker='D')

print("MSE:",mse3)
print("Intercept",SLR3.intercept_)
print("slope",SLR3.coef_)

import datetime

x = datetime.datetime(2023,8,28,11,19,45)
print(x)